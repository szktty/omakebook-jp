.. _WhatIsOMake:

====================
2 章: OMake とは何か
====================

OMake とは何か
==============

OMake はスケーラビリティと移植性に優れた汎用ビルドツールです。次の特徴があります。

親しみやすい文法
  OMake で用いるファイルの文法は、 make の文法とシェルスクリプトを合わせたようなシンプルなものです。すぐに慣れるでしょう。ただ、 make に似た文法で make 以上のことをやるためにややこしくなっている部分もあるので、思うように使いこなすのは案外厄介です。親しみやすい、ってだけで。

継続監視ビルド

スケールする
  OMake は大規模開発にもスケールします。

強力な依存解析
  ただ、ビルドしたいファイルの依存解析処理がデフォルトで用意されているか、誰かがすでに実装していればの話ですが。

移植性
  OMake では OSH シェルという独自のシェルを主に使います。 OSH シェルは OMake がサポートするすべてのプラットフォーム (Windows を含む) で動くので、ビルドファイルを複数のプラットフォームで同じように動かせます (あくまでシェルのみの話) 。しかし OSH シェルが基本となると、これはこれで困ることもあるので喜ばしいのかどうかわかりません。

拡張可能
  OMake はプログラミング言語でもあり、複雑なビルドを記述できます。新しい言語やツールに対応するルールを用意してライブラリにしておくこともできます。


.. note:: **ある対話**

   |
   | **N**: これ OMake の本だと思ったけど遠回しに dis ってんの？
   | **S**: メリットもあればデメリットもあるというか、メリットだと思ってたらデメリットのほうが大きい気がしてきた面もあるというか...


ライセンス
==========

OMake に含まれるファイルには、 GPL ライセンス と MIT ライセンスのものが混ざっています。ビルドを行う OMake エンジンは GPL ライセンス、あらかじめ用意されているビルドファイルは MIT ライセンスで配布されています。 OMake エンジンのソースコードに手を入れない限り、 GPL の影響はありません。


OCaml との関係
==============

OMake は OCaml で実装されていますが、 OMake を使うのに OCaml の知識は必要ありません。また、 OMake は OCaml ソースファイル専用のビルドツールでもありません (OCaml ソースファイル **も** ビルドできます) 。本書では「 :ref:`OCaml ソースファイルのビルド <BuildingOCamlSourceFiles>` を除き、 OCaml についてこれ以上は触れません。

.. note:: **ある対話**

   |
   | **O**: でも OCaml のインストールは必要なんですよね。
   | **S**: はい。しかも最新の OCaml を使うと OMake 側に修正が必要というオマケつき。詳しくは次で。


インストール
============

:ref:`付録 A: ビルドとインストール <BuildAndInstall>` を参照してください。

