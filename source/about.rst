============
本書について
============

本書の目的
==========

本書の目的は、プロジェクトを OMake で管理できるようになることです。プロジェクトによっては、 OMake が対応していないプログラミング言語やツールを扱わなければならないことがあります。そのような場合でも、 OMake を自分で拡張してより便利に、より簡単にプロジェクトを管理できるようになります。


対象となる読者
==============

本書は次の読者を対象としています。

* これから OMake を始める人。
* すでに OMake を使っていて、新しいプログラミング言語やツールを扱う関数・ルールを書きたい人。
* 他のビルドツールから OMake への移行を検討している人。

要するに OMake を自由自在に扱える人以外です。


必要となる知識
==============

* UNIX 系の基本的なコマンドが使えること。
* コマンドの直接入力、または何らかのビルドツールでソフトウェアをビルドした経験があること。さらにビルドツールでビルド仕様を書いた経験があると理解が早いでしょう。
* make についてあまり知らなくても構いません。 OMake は make (や GNU Make) に似ている部分もありますが、 make の知識は不要です。 make の経験がある人向けには「 :ref:`make から OMake への移行 <MakeToOMake>` 」を用意しています。


本書の内容
==========

:ref:`1 章: ソフトウェアビルド入門 <BuildPrimer>`
  ソフトウェアのビルドについて簡単に触れます。すでにビルドについて十分な経験がある人は飛ばして構いません。

:ref:`2 章: OMake とは何か <WhatIsOMake>`
  OMake の概要と特徴を解説します。

:ref:`3 章: 最初の一歩 <FirstStep>`
  簡単なプロジェクトを通じて、 OMake の基本的な使い方を学びます。

:ref:`4 章: 次の一歩 <SecondStep>`
  OMake の便利な使い方や実行の仕組みを学びます。普通に使う分には (ライブラリを作ったり新しい言語に対応させたりしない分には) 、ここまで理解すれば十分です。

:ref:`5 章: OMake プログラミング <OMakeProgramming>`
  OMake の核である OMake 言語について解説します。

:ref:`6 章: ルール <Rules>`
  プログラムをビルドするためのルールの定義について解説します。

:ref:`7 章: ビルドの実行 <ExecutingBuild>`
  並列ビルド、継続監視ビルドなどのビルドの実行方法について解説します。

:ref:`8 章: 自動設定 <Autoconf>`

:ref:`9 章: プロジェクト管理 <ProjectManagement>`
  OMake を使ったプロジェクトの管理について解説します。

:ref:`10 章: C ソースファイルのビルド <BuildingCSourceFiles>`
  C ソースファイルのビルドについて解説します。 flex/bison (lex/yacc) のソースファイルの扱いについても触れます。

:ref:`11 章: C++ ソースファイルのビルド <BuildingCPPSourceFiles>`
  C++ ソースファイルのビルドについて解説します。

:ref:`12 章: カスタマイズ <Customization>`
  OMake のカスタマイズについて解説します。新しいプログラミング言語・ツールに対応させる方法や、動的にルールを定義する関数の定義などの話題を扱います。

:ref:`13 章: デバッグ <Debug>`
  OMake ファイルのデバッグ方法について解説します。

:ref:`14 章: 移植可能な OMake ファイルを書く <Portability>`
  複数のプラットフォームで動作する OMake ファイルを書く際の注意について解説します。

:ref:`15 章: make から OMake への移行 <MakeToOMake>`
  make から OMake への移行について解説します。 make と OMake の違いや make ファイルを OMake ファイルに書き換える際の注意について解説します。

:ref:`16 章: トラブルシューティング <Troubleshooting>`
  OMake を使う上でよくあるエラーと解決方法について解説します。

:ref:`付録 A: ビルドとインストール <BuildAndInstall>`
  OMake のビルドとインストールについて解説します。

:ref:`付録 B: OSH シェル <OSHShell>`
  OMake に含まれているコマンドインタプリタについて解説します。

:ref:`付録 C: どう書く？ OMake <Doukaku>`
  OMake でビルド以外のプログラミングを行う例です。頭の体操程度にどうぞ。

